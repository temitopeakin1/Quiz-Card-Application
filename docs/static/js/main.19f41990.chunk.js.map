{"version":3,"sources":["FlashCard.tsx","FlashCardList.tsx","App.tsx","index.tsx"],"names":["FlashCard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","style","className","onClick","ref","map","option","key","FlashCardList","flashcards","id","App","categoryEl","amountEl","flashCards","setFlashCards","categories","setCategories","decodeString","str","textArea","document","createElement","innerHTML","value","axios","get","then","res","data","trivia_categories","onSubmit","e","preventDefault","params","amount","category","results","questionItem","index","correct_answer","incorrect_answers","a","sort","random","Date","now","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"mOAyDeA,EA9C6B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACrCC,oBAAS,GAD4B,mBACtDC,EADsD,KAChDC,EADgD,OAEjCF,mBAAS,KAFwB,mBAEtDG,EAFsD,KAE9CC,EAF8C,KAGvDC,EAAUC,iBAAuB,MACjCC,EAASD,iBAAuB,MACtC,SAASE,IACP,IAAMC,EAAcJ,EAAQK,QAASC,wBAAwBR,OACvDS,EAAaL,EAAOG,QAASC,wBAAwBR,OAC3DC,EAAUS,KAAKC,IAAIL,EAAaG,EAAY,MAa9C,OAXAG,oBAAUP,EAAc,CACtBT,EAAUiB,SACVjB,EAAUkB,OACVlB,EAAUmB,UAEZH,qBAAU,WAER,OADAI,OAAOC,iBAAiB,SAAUZ,GAC3B,WACLW,OAAOE,oBAAoB,SAAUb,MAEtC,IAED,yBACEc,MAAO,CAAEnB,UACToB,UAAS,eAAUtB,GAAQ,QAC3BuB,QAAS,kBAAMtB,GAASD,KAExB,yBAAKsB,UAAU,QAAQE,IAAKpB,GACzBN,EAAUiB,SACX,yBAAKO,UAAU,qBACZxB,EAAUmB,QAAQQ,KAAI,SAACC,GACtB,OACE,yBAAKJ,UAAU,mBAAmBK,IAAKD,GACpCA,QAMX,yBAAKJ,UAAU,OAAOE,IAAKlB,GACxBR,EAAUkB,UC7BJY,EAVqC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACrD,OACE,yBAAKP,UAAU,aACZO,EAAWJ,KAAI,SAAC3B,GACf,OAAO,kBAAC,EAAD,CAAWA,UAAWA,EAAW6B,IAAK7B,EAAUgC,U,gBCuEhDC,MAnFf,WACE,IAAMC,EAAa3B,iBAA0B,MACvC4B,EAAW5B,iBAAyB,MAF7B,EAGuBN,mBAAc,IAHrC,mBAGNmC,EAHM,KAGMC,EAHN,OAIuBpC,mBAAc,IAJrC,mBAINqC,EAJM,KAIMC,EAJN,KAWb,SAASC,EAAaC,GACpB,IAAMC,EAAWC,SAASC,cAAc,YAExC,OADAF,EAASG,UAAYJ,EACdC,EAASI,MA+BlB,OAxCA9B,qBAAU,WACR+B,IAAMC,IAAI,wCAAwCC,MAAK,SAACC,GACtDX,EAAcW,EAAIC,KAAKC,wBAExB,IAqCD,oCACE,0BAAMC,SA/BV,SAAsBC,GAAgC,IAAD,IACnDA,EAAEC,iBACFR,IACGC,IAAI,8BAA+B,CAClCQ,OAAQ,CACNC,OAAM,UAAEtB,EAASxB,eAAX,aAAE,EAAkBmC,MAC1BY,SAAQ,UAAExB,EAAWvB,eAAb,aAAE,EAAoBmC,SAGjCG,MAAK,SAACC,GACLb,EACEa,EAAIC,KAAKQ,QAAQhC,KAAI,SAACiC,EAAmBC,GACvC,IAAM3C,EAAS0C,EAAaE,eACtB3C,EAAU,sBACXyC,EAAaG,kBAAkBpC,KAAI,SAACqC,GAAD,OACpCxB,EAAawB,OAFD,CAId9C,IACA+C,MAAK,kBAAMnD,KAAKoD,SAAW,MAC7B,MAAO,CACLlC,GAAG,GAAD,OAAK6B,EAAL,YAAcM,KAAKC,OACrBnD,SAAUuB,EAAaoB,EAAa3C,UACpCC,SACAC,mBAQsBK,UAAU,UACtC,yBAAKA,UAAU,cACb,2BAAO6C,QAAQ,YAAf,YACA,4BAAQrC,GAAG,WAAWN,IAAKQ,GACxBI,EAAWX,KAAI,SAAC+B,GACf,OACE,4BAAQZ,MAAOY,EAAS1B,GAAIH,IAAK6B,EAAS1B,IACvC0B,EAASY,WAOpB,yBAAK9C,UAAU,cACb,2BAAO6C,QAAQ,UAAf,uBACA,2BACEE,KAAK,SACLvC,GAAI,SACJwC,IAAK,IACLC,KAAM,IACNC,aAAc,GACdhD,IAAKS,KAGT,yBAAKX,UAAU,cACb,4BAAQA,UAAU,OAAlB,cAGJ,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAeO,WAAYK,OC5EnCuC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlC,SAASmC,eAAe,W","file":"static/js/main.19f41990.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\ninterface FlashCardProps {\n  flashcard: {\n    id: number;\n    question: string;\n    answer: string;\n    options: string[];\n  };\n}\n\nconst FlashCard: React.FC<FlashCardProps> = ({ flashcard }) => {\n  const [flip, setFlip] = useState(false);\n  const [height, setHeight] = useState(100);\n  const frontEl = useRef<HTMLDivElement>(null);\n  const backEl = useRef<HTMLDivElement>(null);\n  function setMaxHeight() {\n    const frontHeight = frontEl.current!.getBoundingClientRect().height;\n    const backHeight = backEl.current!.getBoundingClientRect().height;\n    setHeight(Math.max(frontHeight, backHeight, 150));\n  }\n  useEffect(setMaxHeight, [\n    flashcard.question,\n    flashcard.answer,\n    flashcard.options,\n  ]);\n  useEffect(() => {\n    window.addEventListener(\"resize\", setMaxHeight);\n    return () => {\n      window.removeEventListener(\"resize\", setMaxHeight);\n    };\n  }, []);\n  return (\n    <div\n      style={{ height }}\n      className={`card ${flip && \"flip\"}`}\n      onClick={() => setFlip(!flip)}\n    >\n      <div className=\"front\" ref={frontEl}>\n        {flashcard.question}\n        <div className=\"flashcard-options\">\n          {flashcard.options.map((option) => {\n            return (\n              <div className=\"flashcard-option\" key={option}>\n                {option}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"back\" ref={backEl}>\n        {flashcard.answer}\n      </div>\n    </div>\n  );\n};\n\nexport default FlashCard;\n","import React from \"react\";\nimport FlashCard from \"./FlashCard\";\n\ninterface FlashCardListProps {\n  flashcards: {\n    id: number;\n    question: string;\n    answer: string;\n    options: string[];\n  }[];\n}\n\nconst FlashCardList: React.FC<FlashCardListProps> = ({ flashcards }) => {\n  return (\n    <div className=\"card-grid\">\n      {flashcards.map((flashcard) => {\n        return <FlashCard flashcard={flashcard} key={flashcard.id}></FlashCard>;\n      })}\n    </div>\n  );\n};\n\nexport default FlashCardList;\n","import React, { FormEvent, useEffect, useRef, useState } from \"react\";\nimport FlashCardList from \"./FlashCardList\";\nimport axios from \"axios\";\n\nfunction App() {\n  const categoryEl = useRef<HTMLSelectElement>(null);\n  const amountEl = useRef<HTMLInputElement>(null);\n  const [flashCards, setFlashCards] = useState<any>([]);\n  const [categories, setCategories] = useState<any>([]);\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api_category.php\").then((res) => {\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n\n  function decodeString(str: string) {\n    const textArea = document.createElement(\"textarea\");\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n  function handleSubmit(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    axios\n      .get(\"https://opentdb.com/api.php\", {\n        params: {\n          amount: amountEl.current?.value,\n          category: categoryEl.current?.value,\n        },\n      })\n      .then((res) => {\n        setFlashCards(\n          res.data.results.map((questionItem: any, index: number) => {\n            const answer = questionItem.correct_answer;\n            const options = [\n              ...questionItem.incorrect_answers.map((a: string) =>\n                decodeString(a)\n              ),\n              answer,\n            ].sort(() => Math.random() - 0.5);\n            return {\n              id: `${index}-${Date.now()}`,\n              question: decodeString(questionItem.question),\n              answer,\n              options,\n            };\n          })\n        );\n      });\n  }\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"header\">\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select id=\"category\" ref={categoryEl}>\n            {categories.map((category: { id: number; name: string }) => {\n              return (\n                <option value={category.id} key={category.id}>\n                  {category.name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number of Questions</label>\n          <input\n            type=\"number\"\n            id={\"amount\"}\n            min={\"1\"}\n            step={\"1\"}\n            defaultValue={10}\n            ref={amountEl}\n          />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn\">Generate</button>\n        </div>\n      </form>\n      <div className=\"container\">\n        <FlashCardList flashcards={flashCards} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}